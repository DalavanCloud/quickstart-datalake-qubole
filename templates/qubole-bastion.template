{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Qubole bastion",
    "Mappings": {
        "AWSAMIRegionMap": {
            "us-east-1": {
                "AMZNLINUXHVM": "ami-fdd62b90",
                "AMI": "ami-67311b0d"
            },
            "us-west-1": {
                "AMZNLINUXHVM": "ami-d4c3b8b4",
                "AMI": "ami-f68ff996"
            },
            "us-west-2": {
                "AMZNLINUXHVM": "ami-f4a65e94",
                "AMI": "ami-2559b845"
            },
            "eu-west-1": {
                "AMZNLINUXHVM": "ami-15b72466",
                "AMI": "ami-9a53e3e9"
            },
            "sa-east1": {
                "AMZNLINUXHVM": "ami-6f47cc03"
            },
            "ap-southeast-1": {
                "AMZNLINUXHVM": "ami-489e4e2b",
                "AMI": "ami-030ec060"
            },
            "ap-northeast-1": {
                "AMZNLINUXHVM": "ami-0a4ba76b",
                "AMI": "ami-9defebf3"
            }
        }
    },
    "Parameters": {
        "KeyPairName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PublicSubnet1ID": {
            "Description": "ID of the public subnet 1 that you want to provision the bastion into (e.g., subnet-a0246dcd).",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of the public subnet 2 you want to provision the bastion into (e.g., subnet-e3246d8e).",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPCID": {
            "Description": "ID of your existing VPC (e.g., vpc-0343606e).",
            "Type": "AWS::EC2::VPC::Id"
        },
        "VPCCIDR": {
            "Description": "CIDR block for your existing VPC.",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "The EC2 instance type for the bastion host instances.",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "InstanceProfileName": {
            "Type": "String",
            "Description": "Instance profile name"
        },
        "NumBastionInstances": {
            "Default": "1",
            "Description": "The number of bastion hosts to create.",
            "Type": "String"
        },
        "QuboleBastionIngressAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "CIDR block allowed to access Qubole bastion instance. You should follow instructions from http://docs.qubole.com/en/latest/user-guide/clusters/clusters-in-vpcs.html#creating-a-security-group-in-the-vpc to obtain Qubole tunnel server's IP address. Alternatively, set it to 0.0.0.0/0 to let anyone access Qubole Bastion. CIDR block parameter must be in the form x.x.x.x/x (e.g., 96.127.8.12/32).",
            "Type": "String"
        }
    },
    "Resources": {
        "EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "BastionAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": {
                    "Ref": "BastionLaunchConfiguration"
                },
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnet1ID"
                    },
                    {
                        "Ref": "PublicSubnet2ID"
                    }
                ],
                "MinSize": {
                    "Ref": "NumBastionInstances"
                },
                "MaxSize": {
                    "Ref": "NumBastionInstances"
                },
                "Cooldown": "300",
                "DesiredCapacity": {
                    "Ref": "NumBastionInstances"
                },
                "Tags": [{
                     "Key": "Name",
                     "Value": "QuboleBastion",
                     "PropagateAtLaunch": "true"
                }]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": {
                        "Ref": "NumBastionInstances"
                    },
                    "Timeout": "PT15M"
                }
            }
        },
        "BastionLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                    }
                }
            },
            "Properties": {
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMZNLINUXHVM"
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "BastionSecurityGroup"
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "InstanceProfileName"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash -xe",
                                "yum update -y",
                                "yum install -y aws-cfn-bootstrap",
                                "# associate Elastic IP",
                                "INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)",
                                {
                                    "Fn::Sub": ["ALLOCATION_ID=${AllocationID}", {"AllocationID": { "Fn::GetAtt" : ["EIP", "AllocationId"] }}]
                                },
                                {
                                    "Fn::Sub": "aws ec2 associate-address --instance-id $INSTANCE_ID --allocation-id $ALLOCATION_ID --region ${AWS::Region} --allow-reassociation"
                                },
                                {
                                    "Fn::Sub": "/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource BastionAutoScalingGroup --region ${AWS::Region}"
                                }
                            ]
                        ]
                    }
                }
            }
        },
        "BastionSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH Access to Bastion Hosts",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": { "Ref": "QuboleBastionIngressAccessCIDR" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "7000",
                        "ToPort": "7000",
                        "CidrIp": {"Ref": "VPCCIDR"}
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "7000",
                        "ToPort": "7000",
                        "CidrIp": { "Ref": "QuboleBastionIngressAccessCIDR" }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "BastionPublicDnsName": {
            "Description": "Bastion public DNS",
            "Value": {
                "Ref": "EIP"
            }
        }
    }
}